" 设置缩进的宽度为4个空格
set shiftwidth=4

" 设置制表符的宽度为4个空格
set tabstop=4

" 用空格代替制表符
set expandtab

" 启用智能缩进
set smartindent

" 启用自动缩进
set autoindent

" 使光标移到下一行时保留当前行的缩进
set smarttab

" 显示行号
set number

" 默认使用鼠标
set mouse=a

" 搜索时自动跳转到匹配处
set incsearch
" 搜索时高亮显示匹配字符
set hlsearch
" 忽略大小写
set ignorecase
set smartcase

" 高亮显示匹配括号
set showmatch


" 自动补全小括号 ()
"inoremap ( ()<Left>

" 自动补全大括号 {}
" inoremap { {}<Left>

" 自动补全中括号 []
"inoremap [ []<Left>

" 自动补全单引号 ''
" inoremap ' ''<Left>

" 自动补全双引号 ""
" inoremap " ""<Left>

" 大括号中加入自动换行和缩进
" inoremap {<CR> {<CR>}<Esc>O



" 将 F2 键绑定到切换鼠标模式函数
nnoremap <F2> :call ToggleMouseMode()<CR>
inoremap <F2> <C-O>:call ToggleMouseMode()<CR>
vnoremap <F2> :<C-U>call ToggleMouseMode()<CR>

" 将 F3 键绑定到切换行号显示函数
nnoremap <F3> :call ToggleLineNumber()<CR>
inoremap <F3> <C-O>:call ToggleLineNumber()<CR>
vnoremap <F3> :<C-U>call ToggleLineNumber()<CR>


" Save the last position for each file and jump to it on opening
if has("autocmd")
  " When editing a file, place the cursor at the last known position.
  autocmd BufReadPost *
        \ if line("'\"") > 1 && line("'\"") <= line("$") |
        \   exe "normal! g'\"" |
        \ endif
endif

" --------------- functions define ---------------
" 定义一个函数来切换鼠标模式
function! ToggleMouseMode()
  if &mouse == 'a'
    set mouse=
    echo "Mouse mode disabled"
  else
    set mouse=a
    echo "Mouse mode enabled"
  endif
endfunction

" 定义一个函数来切换行号显示
function! ToggleLineNumber()
  if &number
    set nonumber
    echo "Line numbers disabled"
  else
    set number
    echo "Line numbers enabled"
  endif
endfunction
" --------------- functions end ------------------

