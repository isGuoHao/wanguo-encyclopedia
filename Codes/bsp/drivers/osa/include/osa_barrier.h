#ifndef __OSA_BARRIER_H__
#define __OSA_BARRIER_H__


#include <asm/barrier.h>

/* -------------------------------------------------------------- */
/*                             宏定义                                */
/* -------------------------------------------------------------- */

/* 本文件中没有宏定义 */

/* -------------------------------------------------------------- */
/*                            结构体定义                               */
/* -------------------------------------------------------------- */

/* 本文件中没有结构体定义 */

/* -------------------------------------------------------------- */
/*                             函数声明                                */
/* -------------------------------------------------------------- */

/**
 * osa_mb - 全局内存屏障
 * 返回: 无
 * 说明: 确保所有之前的内存访问操作在任何后续的内存访问操作之前完成。这有助于防止编译器和处理器重新排序内存访问操作。
 */
extern void osa_mb(void);

/**
 * osa_rmb - 读内存屏障
 * 返回: 无
 * 说明: 确保所有之前的读操作在任何后续的读操作之前完成。这有助于防止编译器和处理器重新排序读操作。
 */
extern void osa_rmb(void);

/**
 * osa_wmb - 写内存屏障
 * 返回: 无
 * 说明: 确保所有之前的写操作在任何后续的写操作之前完成。这有助于防止编译器和处理器重新排序写操作。
 */
extern void osa_wmb(void);

/**
 * osa_smp_mb - SMP全局内存屏障
 * 返回: 无
 * 说明: 在多处理器系统中，确保所有之前的内存访问操作在任何后续的内存访问操作之前完成。这有助于防止多处理器环境下的内存访问重排序。
 */
extern void osa_smp_mb(void);

/**
 * osa_smp_rmb - SMP读内存屏障
 * 返回: 无
 * 说明: 在多处理器系统中，确保所有之前的读操作在任何后续的读操作之前完成。这有助于防止多处理器环境下的读操作重排序。
 */
extern void osa_smp_rmb(void);

/**
 * osa_smp_wmb - SMP写内存屏障
 * 返回: 无
 * 说明: 在多处理器系统中，确保所有之前的写操作在任何后续的写操作之前完成。这有助于防止多处理器环境下的写操作重排序。
 */
extern void osa_smp_wmb(void);

/**
 * osa_isb - 指令同步屏障
 * 返回: 无
 * 说明: 确保所有之前的指令在任何后续的指令之前完成。这有助于防止编译器和处理器重新排序指令。
 */
extern void osa_isb(void);

/**
 * osa_dsb - 数据同步屏障
 * 返回: 无
 * 说明: 确保所有之前的数据访问操作在任何后续的数据访问操作之前完成。这有助于防止编译器和处理器重新排序数据访问操作。
 */
extern void osa_dsb(void);

/**
 * osa_dmb - 数据内存屏障
 * 返回: 无
 * 说明: 确保所有之前的内存访问操作在任何后续的内存访问操作之前完成。这有助于防止编译器和处理器重新排序内存访问操作。
 */
extern void osa_dmb(void);

#endif // __OSA_BARRIER_H__
